/**
*author Chris Ludovice
*@date  11.26.2019
*description: utility class responsible for parsing service response with nested json to apex objects using JSON method.
@revision(s)
 */
public class Json2ApexNestedJson {
    
    public static void parse(){
        
        // sample payload -> https://github.com/chrisludovice/SalesforceDXShare/blob/brainstorm/NestedJsonPayload
       String payload= '{"data":[{"keyId":"1","referralCode":"a1","testName":"cmp Test1","push":"PURCHASED","metadata":null,"createdAt":"2019-10-07T09:22:16.516Z","updatedAt":"2019-10-07T09:22:16.516Z"},{"keyId":"2","referralCode":"a2","testName":"cmp Test2","push":"PROCESSING","metadata":{"name":"Automation, for redemption","date":"2019-10-07T09:22:16.581Z"},"createdAt":"2019-10-07T09:22:16.942Z","updatedAt":"2019-10-07T09:22:16.942Z"},{"keyId":"3","referralCode":"1d","testName":"cmp Test3","push":"PURCHASED","metadata":{"v_status":{"revert":true}},"createdAt":"2019-10-07T09:22:17.386Z","updatedAt":"2019-10-07T09:22:17.386Z"},{"keyId":"4","referralCode":"a128af45-7fb1-428b-8f1f-ff3c1aba385f","testName":"cmp Te4st","push":"PROCESSING","metadata":{"name":"Automation, for redemption","date":"2019-10-07T09:22:17.457Z"},"createdAt":"2019-10-07T09:22:17.835Z","updatedAt":"2019-10-07T09:22:17.835Z"},{"keyId":"5","referralCode":"2ac","testName":"1 Million Voucher Percent Test","push":"REDEEMED","metadata":null,"createdAt":"2019-10-07T09:22:18.322Z","updatedAt":"2019-10-07T09:22:18.322Z"}]}';        
	  
        // using JSON.deserializeUntyped to deserialize nested json payload        
        Map<String, Object> mainNode;
        List<Object> firtInstance;
        mainNode = (Map<String, Object>)JSON.deserializeUntyped(payload); 
        if(mainNode!=null)
        	firtInstance = (List< Object>)mainNode.get('data'); 
        else mainNode = new Map<String, Object>();
        
        for(integer x=0;x<firtInstance.size();x++){
            
            Map<String, Object> d1 =  (Map<String, Object>)firtInstance[x];           
            
            // print first level of json - > data
            system.debug('keyId'+x+': '+d1.get('keyId'));
            system.debug('referralCode'+x+': '+d1.get('referralCode'));
            system.debug('push'+x+': '+d1.get('push'));
            system.debug('createdAt'+x+': '+d1.get('createdAt'));
            system.debug('updatedAt'+x+': '+d1.get('updatedAt')); 
            
            // print second level of json - > metadata
            Map<String, Object> d2 = (Map<String, Object>)d1.get('metadata');            
            if(d2!=null){
                system.debug('name:'+d2.get('name'));
                system.debug('date:'+d2.get('date'));
                
                // print 3rd level of json - > v_status
                if(d2.get('v_status')!=null){
                    Map<String, Object> d3 =  (Map<String, Object>)d2.get('v_status'); 
            		if(d3!=null)
                	system.debug('revert:'+d3.get('revert'));
                }
            }
          }           

    }
}
